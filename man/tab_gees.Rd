% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab_gees.R
\name{tab_gees}
\alias{tab_gees}
\title{APA: flextable for 2-3 GEE models}
\usage{
tab_gees(
  x,
  var_labels = NULL,
  caption = "Compare GEE Models",
  docx = NA,
  general_note = NA,
  p_note = "apa123",
  no_notes = FALSE,
  d = 2,
  narrow = FALSE,
  show_single_row = NULL,
  breaks = c(0.05, 0.01, 0.001),
  symbols = c("*", "**", "***")
)
}
\arguments{
\item{x}{REQUIRED: List. at least 2 geeglm models, bare names}

\item{var_labels}{Optional: Vector. Text replacements for model terms, "old" = "new"}

\item{caption}{Optional: Text. Caption for the table}

\item{docx}{Optional: filename. must end with ".docx"}

\item{general_note}{Optional: Text. General note for footer of APA table}

\item{p_note}{Optional: Text. (default = NULL) Significance note for APA table, If p_note = "apa" then the standard "* p < .05. ** p < .01. *** p < .001." will be used}

\item{no_notes}{REQUIRED: Logical.  Defaults to \code{FALSE}, if \code{TRUE} will ignore \code{general_note} and \code{p_note}}

\item{d}{Optional: Number. Digits after the decimal place}

\item{narrow}{Optional. Logical. Default = FALSE, but TRUE will exclude p-vlaues from the table to make it narrower}

\item{show_single_row}{(tidy-select) By default categorical variables are printed on multiple rows. If a variable is dichotomous (e.g. Yes/No) and you wish to print the regression coefficient on a single row, include the variable name(s) here.}

\item{breaks}{Optional: numeric vector of p-value cut-points}

\item{symbols}{Optional: character vector for symbols denoting p-value cut-points}
}
\value{
a flextable object
}
\description{
APA: flextable for 2-3 GEE models
}
\examples{

library(tidyverse)
library(HSAUR)
library(tidyverse)
library(geepack)

data("respiratory", package = "HSAUR")

data_wide <- respiratory \%>\%
 tidyr::spread(key = month,
               value = status,
               sep = "_") \%>\%
 dplyr::rename("BL_status" = "month_0") \%>\%
 dplyr::arrange(subject) \%>\%
 dplyr::select(subject, centre,
               sex, age, treatment,
               BL_status, starts_with("month"))

data_long <- data_wide\%>\%
 tidyr::gather(key = month,
               value = status,
               starts_with("month")) \%>\%
 dplyr::mutate(month = str_sub(month, start = -1) \%>\% as.numeric) \%>\%
 dplyr::mutate(status = case_when(status == "poor" ~ 0,
                                  status == "good" ~ 1)) \%>\%
 dplyr::arrange(subject, month) \%>\%
 dplyr::select(subject, centre, sex, age, treatment, BL_status, month, status)


resp_geeglm_ex <- geepack::geeglm(status ~ centre + treatment + sex + BL_status +
                                   I(age-33) + I((age-33)^2),
                                 data = data_long,
                                 family = binomial(link = "logit"),
                                 id = subject,
                                 waves = month,
                                 corstr = "exchangeable")




resp_geeglm2_ex <- geepack::geeglm(status ~ treatment + sex + BL_status,
                                  data = data_long,
                                  family = binomial(link = "logit"),
                                  id = subject,
                                  waves = month,
                                  corstr = "exchangeable")


tab_gees(list(resp_geeglm_ex, resp_geeglm2_ex))
tab_gees(list(resp_geeglm_ex, resp_geeglm2_ex), narrow = TRUE)


data(BtheB, package = "HSAUR")

btb_wide <- BtheB \%>\%
 dplyr::mutate(id = row_number()) \%>\%           # create a new variable to ID participants
 dplyr::select(id, treatment,                    # specify that ID variable is first
               drug, length,
               bdi.pre, bdi.2m, bdi.4m, bdi.6m, bdi.8m)

btb_long <- btb_wide \%>\%
 tidyr::pivot_longer(cols = c(bdi.2m, bdi.4m, bdi.6m, bdi.8m),  # all existing variables (not quoted)
                     names_to = "month",
                     names_pattern = "bdi.(.)m",
                     values_to = "bdi") \%>\%
 dplyr::mutate(month = as.numeric(month)) \%>\%
 dplyr::filter(complete.cases(id, bdi, treatment, month)) \%>\%
 dplyr::arrange(id, month) \%>\%
 dplyr::select(id, treatment, drug, length, bdi.pre, month, bdi)

btb_geeglm_ex_1 <- geepack::geeglm(bdi ~ bdi.pre + length + drug + treatment + month,
                                  data = btb_long,
                                  id = id,
                                  wave = month,
                                  family = gaussian,
                                  corstr = 'exchangeable')

btb_geeglm_ex_2 <- geepack::geeglm(bdi ~ bdi.pre*length + drug + treatment + month,
                                  data = btb_long,
                                  id = id,
                                  wave = month,
                                  family = gaussian,
                                  corstr = 'exchangeable')


tab_gees(list(btb_geeglm_ex_1, btb_geeglm_ex_2))
tab_gees(list(btb_geeglm_ex_1, btb_geeglm_ex_2), narrow = TRUE)


}
