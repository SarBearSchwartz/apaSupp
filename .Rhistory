ggsave(filename = "figures/fig_rq2.png",
width = 6,
height = 4,
units = "in")
sim_slope_Max <- fit_2 %>%
emmeans::emtrends(var = "hours",
~ prog | gender,
at = list(effort = 45)) %>%
data.frame() %>%
dplyr::filter(prog != "Reading")
tab_rq3a <- sim_slope_Max %>%
dplyr::select(Program = prog,
Gender = gender,
Slope = hours.trend,
SE, lower.CL, upper.CL) %>%
dplyr::mutate_if(is.numeric, apaSupp::apa2) %>%
flextable::flextable()%>%
flextable::set_caption("RQ (3) Additional Weight Loss per Hour/Week Spent on Each Exercise Program with Near Maximum Effort, by Gender")
tab_rq3a
tab_rq3a %>%
flextable::save_as_docx(path = "tables/tab_rq3a.docx")
sim_slopes_cmp <- fit_2 %>%
emmeans::emtrends(var = "hours",
~ effort | prog + gender,
at = list(effort = c(29.63, 45))) %>%
pairs() %>%
data.frame() %>%
dplyr::filter(prog != "Reading") %>%
dplyr::mutate(Difference = abs(estimate)) %>%
dplyr::mutate(p = apaSupp::p_num(p.value)) %>%
dplyr::mutate_if(is.numeric, apaSupp::apa2) %>%
dplyr::select(prog, gender, Difference, SE, p)
sim_slopes_M45 <- fit_2 %>%
emmeans::emtrends(var = "hours",
~ effort | prog + gender,
at = list(effort = c(29.63, 45))) %>%
data.frame() %>%
dplyr::select(prog, gender, effort, hours.trend) %>%
dplyr::filter(prog != "Reading")
tab_rq3b <- sim_slopes_M45 %>%
tidyr::pivot_wider(names_from = effort,
names_prefix = "b_",
values_from = hours.trend) %>%
dplyr::rename("b,\nAverage" = b_29.63,
"b,\nNear Max" = b_45) %>%
dplyr::mutate_if(is.numeric, apaSupp::apa2) %>%
dplyr::full_join(sim_slopes_cmp, by = c("prog", "gender")) %>%
dplyr::rename(Program = prog,
Gender = gender,
"b, Difference" = "Difference") %>%
flextable::flextable() %>%
flextable::set_caption("RQ (3) Additional Weight Loss per Hour/Week Spent on Each Exercise Program with Near Max vs. Mean Effort, by Gender")
tab_rq3b
tab_rq3b %>%
flextable::save_as_docx(path = "tables/tab_rq3b.docx")
effects::Effect(mod = fit_2,
focal.predictors = c("prog", "hours",
"gender", "effort"),
xlevels = list(hours = seq(from = 0,
to = 4,
by = .1),
effort = c(29.63, 45))) %>%
data.frame() %>%
dplyr::filter(prog != "Reading") %>%
dplyr::mutate(effort = effort %>%
factor(levels = c(45, 29.63),
labels = c("Near Max Effort",
"Average Effort"))) %>%
ggplot(aes(x = hours,
y = fit,
group = effort)) +
geom_ribbon(aes(ymin = lower,
ymax = upper,
fill = effort),
alpha = .3) +
geom_line(aes(linetype = effort)) +
theme_bw() +
facet_grid(gender ~ prog) +
geom_hline(yintercept = 0,
color = "blaCK")+
scale_linetype_manual(values = c("solid", "longdash", "dotted")) +
labs(x = "Program Time, hours/week",
y = "Weight Loss, pounds\nEstimated Marginal Mean",
linetype = NULL,
fill = NULL)  +
scale_fill_manual(values = c("gray20", "gray90")) +
scale_y_continuous(breaks = seq(from = -20, to = 100, by = 20)) +
theme(legend.position = c(0, 1),
legend.justification = c(-.1, 1.1),
legend.background = element_rect(color = "black"),
legend.key.width = unit(1, "cm")) +
geom_text(data = sim_slopes_M45 %>%
dplyr::mutate(hours = c(3, 3, 2, 1.5,
3.25, 2, 2, 0.75),
fit = c(5, 45, 13, 45,
7, 30, 17, 40)) %>%
dplyr::mutate(effort = effort %>%
factor(levels = c(45, 29.63),
labels = c("Near Max",
"Average"))),
aes(label = glue::glue("{apaSupp::apa2(hours.trend)}")))
ggsave(filename = "figures/fig_rq3.png",
width = 6,
height = 5,
units = "in")
sessionInfo()
?texreg::wordreg
?unlink
plot(fit_2)
car::residualPlot(fit_2,
type = "rstandard")
?car::residualPlot
par(mfrow = c(1, 1))
---
title:  "Appendix B"
par(mfrow = c(2, 2))
plot(fit_2)
par(mfrow = c(1, 1))
?car::residualPlot
DHARMa::simulateResiduals(fit_2, plot = TRUE)
install.packages("DHARMa")
DHARMa::simulateResiduals(fit_2, plot = TRUE)
DHARMa::simulateResiduals(fit_2, plot = TRUE)
DHARMa::simulateResiduals(fit_2, plot = TRUE)
resid(fit_1)
ggplot(data = fit_1)
hist(resid(fit_1))
?DHARMa::simulateResiduals
car::vif(fit_2)
car::vif(fit_2,
type = "predictor")
?car::vif
tab_lm_fits %>%
flextable::save_as_docx(path = "tables/tab_lm_fits.docx")
performance::r2(fit_2)
?performance::r2
partR2::partR2(fit_2)
effectsize::r2_semipartial(model = fit_2)
effectsize::r2_semipartial(model = fit_2) %>%
data.frame()
effectsize::r2_semipartial(model = fit_2) %>%
data.frame() %>%
dplyr::mutate_if(is.numeric, apaSupp::apa3)
effectsize::r2_semipartial(model = fit_2,
type = "parameter") %>%
data.frame() %>%
dplyr::mutate_if(is.numeric, apaSupp::apa3)
effectsize::r2_semipartial(model = fit_2) %>%
data.frame() %>%
dplyr::mutate_if(is.numeric, apaSupp::apa3)
fit_2$aov
fit_2 %>% names()
setwd("C:/Users/A00315273/GitHub/apaSupp/example1")
df_use %>%
ggplot(aes(x = prog,
y = loss)) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter() +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Weight Loss, pounds") +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10))
df_use %>%
ggplot(aes(x = prog,
y = loss)) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(alpha = .3,
shape = 2,
width = .2) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Weight Loss, pounds") +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10))
df_use %>%
ggplot(aes(x = prog,
y = loss)) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(alpha = .3,
shape = 1,
width = .2) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Weight Loss, pounds") +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10))
df_use %>%
ggplot(aes(x = prog,
y = loss)) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(alpha = .3,
shape = 1,
width = .2,
height = 0) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Weight Loss, pounds") +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10))
df_use %>%
ggplot(aes(x = prog,
y = loss)) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(alpha = .3,
width = .2,
height = 0) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Weight Loss, pounds") +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10))
df_use %>%
ggplot(aes(x = prog,
y = loss)) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(size = .5,
alpha = .3,
width = .2,
height = 0) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Weight Loss, pounds") +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10))
df_use %>%
ggplot(aes(x = prog,
y = loss)) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(size = .75,
alpha = .3,
width = .2,
height = 0) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Weight Loss, pounds") +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10))
df_use %>%
ggplot(aes(x = prog,
y = loss)) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(size = .75,
shape = 1,
alpha = .3,
width = .2,
height = 0) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Weight Loss, pounds") +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10))
df_use %>%
ggplot(aes(x = prog,
y = loss,
fill = gender,
shape = gender,
group = interaction(prog,gender))) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(alpha = .5) +
geom_boxplot(fill = "white",
width = .25,
position = position_dodge(width = .9)) +
geom_jitter(size = .75,
shape = 1,
alpha = .3,
width = .2,
height = 0) +
stat_summary(fun = mean,
geom = "point",
size = 5,
position = position_dodge(width = .9)) +
labs(x = "Program, randomized",
y = "Weight Loss, pounds",
fill = NULL,
color = NULL,
shape = NULL)  +
scale_fill_manual(values = c("gray20", "gray90")) +
scale_shape_manual(values = c(18, 19)) +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10)) +
theme(legend.position = c(0, 1),
legend.justification = c(-.1, 1.1),
legend.background = element_rect(color = "black"),
legend.key.height = unit(1.3, "cm"),
legend.direction = "horizontal")
df_use %>%
ggplot(aes(x = prog,
y = loss,
fill = gender,
shape = gender,
group = interaction(prog,gender))) +
geom_hline(yintercept = 0, color = "black") +
geom_violin(alpha = .5) +
geom_boxplot(fill = "white",
width = .25,
position = position_dodge(width = .9)) +
stat_summary(fun = mean,
geom = "point",
size = 5,
position = position_dodge(width = .9)) +
labs(x = "Program, randomized",
y = "Weight Loss, pounds",
fill = NULL,
color = NULL,
shape = NULL)  +
scale_fill_manual(values = c("gray20", "gray90")) +
scale_shape_manual(values = c(18, 19)) +
scale_y_continuous(breaks = seq(from = -20, to = 50, by = 10)) +
theme(legend.position = c(0, 1),
legend.justification = c(-.1, 1.1),
legend.background = element_rect(color = "black"),
legend.key.height = unit(1.3, "cm"),
legend.direction = "horizontal")
df_use %>%
ggplot(aes(x = prog,
y = hours)) +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(size = .75,
shape = 1,
alpha = .3,
width = .2,
height = 0) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Program Time, hours/week")
df_use %>%
ggplot(aes(x = prog,
y = effort)) +
geom_violin(fill = "gray") +
geom_boxplot(width = .25) +
geom_jitter(size = .75,
shape = 1,
alpha = .3,
width = .2,
height = 0) +
stat_summary(fun = "mean",
geom = "point",
shape = 18,
size = 5) +
stat_summary(aes(group = 1),
fun = "mean",
geom = "line") +
labs(x = "Program, randomized",
y = "Effort Rating, 0-50")
```{r, fig.width=5, fig.height=5}
car::residualPlot(model = fit_2,
type = "rstandard")
```{r, fig.width=5, fig.height=5, fig.cap= "Residual Diagnostics, Assess Normality of the Conditional Distribution of Weight Loss"}
hist(resid(fit_1))
```{r, fig.width=5, fig.height=4, fig.cap= "Residual Diagnostics, Assess Normality of the Conditional Distribution of Weight Loss"}
hist(resid(fit_1))
hist(resid(fit_1))
df_use %>%
dplyr::mutate(resid = resid(fit_2))
df_use %>%
dplyr::mutate(resid = resid(fit_2)) %>%
ggplot(aes(resid)) +
geom_histogram()
df_use %>%
dplyr::mutate(resid = resid(fit_2)) %>%
ggplot(aes(resid)) +
geom_histogram(color = "black",
alpha = .3,
binwidth = .5) +
stat_summary(aes(xintercept = ..x..,
y = 0),
fun = mean,
geom = "vline",
orientation = "y",
linewidth = 2) +
labs(x = "Residual",
y = "Count")
df_use %>%
dplyr::mutate(resid = resid(fit_2)) %>%
ggplot(aes(resid)) +
geom_histogram(color = "black",
alpha = .3,
binwidth = .5) +
stat_summary(aes(xintercept = ..x..,
y = 0),
fun = mean,
geom = "vline",
orientation = "y",
linewidth = 2.5) +
labs(x = "Residual",
y = "Count")
DHARMa::simulateResiduals(fit_2, plot = TRUE)
?DHARMa::simulateResiduals
DHARMa::simulateResiduals(fit_2, plot = TRUE,
cex = 2)
DHARMa::simulateResiduals(fit_2, plot = TRUE,
size = 2)
?resid
influence.measures(fit_1)
influence.measures(fit_2)
?ols_test_normality
olsrr::ols_plot_diagnostics(fit_2)
olsrr::ols_plot_resid_qq(fit_2)
olsrr::ols_test_normality(fit_2)
?ols_test_normality
olsrr::ols_plot_resid_hist(fit_2)
olsrr::ols_plot_resid_hist(fit_2,
binwidth = 1)
olsrr::ols_plot_resid_hist(fit_2)
?olsrr::ols_plot_resid_hist
olsrr::ols_plot_resid_qq(fit_2)
olsrr::ols_plot_resid_hist(fit_2)
olsrr::ols_plot_resid_fit(fit_2)
olsrr::ols_coll_diag(fit_2)
olsrr::ols_plot_diagnostics(fit_2)
olsrr::ols_plot_resid_regressor(fit_2)
olsrr::ols_plot_cooksd_chart(fit_2)
olsrr::ols_plot_cooksd_chart(fit_2, type = 3)
olsrr::ols_plot_cooksd_chart(fit_2, type = 2)
olsrr::ols_plot_cooksd_chart(fit_2, type = 1)
olsrr::ols_plot_cooksd_chart(fit_2, type = 5)
olsrr::ols_plot_cooksd_chart(fit_2)
olsrr::ols_plot_cooksdbar(fit_2)
olsrr::ols_plot_cooksd_bar(fit_2)
olsrr::ols_plot_resid_lev(fit_2)
olsrr::ols_plot_cooksd_chart(fit_2)
olsrr::ols_plot_cooksd_chart(fit_2)
olsrr::ols_plot_cooksd_chart(fit_2)
df_use %>%
ggplot(aes(loss,
fill = gender)) +
geom_density(alpha = .5) +
stat_summary(aes(xintercept = ..x..,
y = 0,
linetype = gender),
fun = mean,
geom = "vline",
orientation = "y",
linewidth = 2) +
geom_vline(xintercept = 0,
color = "black",
linetype = "dotted") +
labs(x = "Weight Loss, pounds",
# y = "Count",
fill = NULL,
color = NULL,
linetype = NULL)+
facet_wrap(~ prog, ncol = 1) +
scale_fill_manual(values = c("gray20", "gray90")) +
scale_x_continuous(breaks = seq(from = -20, to = 50, by = 10)) +
theme(legend.position = c(1, 0),
legend.justification = c(1.1, -.1),
legend.background = element_rect(color = "black"),
legend.key.height = unit(1.5, "cm"))
